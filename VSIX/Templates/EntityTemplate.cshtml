@using PlatformCodeBuilder.Models.TemplateModels
@inherits RazorEngine.Templating.TemplateBase<PlatformCodeBuilder.Models.TemplateModels.EntityFileModel>
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics.CodeAnalysis;
using Abp;
using Abp.Auditing;
using Abp.Domain.Entities.Auditing;

namespace @(Model.Namespace).@(Model.DirName)
{
    /// <summary>
    /// @(Model.Description)
    /// </summary>
    [Audited]
    [Table("@(Model.TableName)")]
    public class @(Model.Name) : FullAuditedAggregateRoot<Guid>
    {
        private @(Model.Name)()
        {
        }

        public @(Model.Name)(Guid id, @(Model.Parameters))
        {
            SetProperties(id, @(Model.MethodParameters));
        }

        private bool SetProperties(Guid id, @(Model.Parameters))
        {
            @foreach (ClassProperty classProperty in Model.ClassPropertys)
            {
                if (classProperty.PropertyType == "string" && !classProperty.IsNull)
                {                   
            @:Check.NotNullOrEmpty(@classProperty.FirstLowerName, "@classProperty.CnName");
                }
            }

            @foreach (ClassProperty classProperty in Model.ClassPropertys)
            {
            @:@classProperty.Name = @classProperty.FirstLowerName;
            }
            
            return true;
        }

        #region 表字段
        @foreach (ClassProperty classProperty in Model.ClassPropertys)
        {
        @:/// <summary>
        @:/// @classProperty.CnName
        @:/// </summary>
        @:[Description("@classProperty.CnName")]
        @:@if (classProperty.ClassAttributes != null && classProperty.ClassAttributes.Count > 0)
        {
            @foreach (var classAttribute in classProperty.ClassAttributes)
            {
        @:@classAttribute.NameValue
            }
        }
        @:public @classProperty.PropertyType @classProperty.Name { get; protected set; }
        }

        #endregion
    }
}